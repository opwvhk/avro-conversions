<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="https://www.schiphol.nl/opwvhk/test" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="https://www.schiphol.nl/opwvhk/test" elementFormDefault="qualified">
	<xs:element name="outer">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="requiredWithDefault" type="xs:string" default="Good Enough"/>
				<xs:element name="missingOptional" type="xs:string" minOccurs="0"/>
				<xs:element name="missingArray" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="presentRequired" type="xs:string"/>
				<xs:element name="presentOptional" type="xs:string" minOccurs="0"/>
				<xs:element name="presentArray" type="xs:string" maxOccurs="unbounded"/>
				<xs:element name="inner" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="numbers">
								<xs:complexType>
									<xs:sequence maxOccurs="unbounded">
										<xs:element name="number" type="xs:int"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="numberInt" type="xs:int"/>
							<xs:element name="numberLong" type="xs:long"/>
							<xs:element name="numberUnbounded" type="xs:integer"/>
							<xs:element name="numberHuge">
								<xs:simpleType>
									<xs:restriction base="xs:nonNegativeInteger">
										<xs:fractionDigits value="0"/>
										<xs:totalDigits value="80"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="amount">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="MoneyAmount">
											<xs:attribute name="currency" type="xs:string"/>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="hexBytes" type="xs:hexBinary"/>
							<xs:element name="b64Bytes" type="xs:base64Binary"/>
						</xs:sequence>
						<xs:attribute name="b" type="xs:boolean" use="required"/>
						<xs:attribute name="fs" type="xs:float"/>
						<xs:attribute name="fd" type="xs:double"/>
						<xs:attribute name="d" type="xs:date"/>
						<xs:attribute name="dt" type="xs:dateTime" use="required"/>
						<xs:attribute name="t" type="xs:time"/>
						<xs:attribute name="s" type="xs:string"/>
						<xs:attribute name="e" default="one">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="one"/>
									<xs:enumeration value="two"/>
									<xs:enumeration value="three"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="switch">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="on"/>
							<xs:enumeration value="off"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="exactNumber">
					<xs:simpleType>
						<xs:restriction base="xs:decimal">
							<xs:fractionDigits value="2"/>
							<xs:minInclusive value="0"/>
							<xs:maxInclusive value="999999.99"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="estimate" type="xs:float" minOccurs="0"/>
				<xs:element name="exceptionToUnwrappingRule">
					<!-- This element is an exception (unlike 'inner/numbers' above), because the Avro schema has this single-field record -->
					<xs:complexType>
						<xs:sequence maxOccurs="unbounded">
							<xs:element name="number" type="xs:int"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="upgrade" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="key" type="xs:string"/>
							<xs:element name="value" type="xs:string"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="MoneyAmount">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2"/>
			<xs:totalDigits value="8"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
